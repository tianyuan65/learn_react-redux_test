{"ast":null,"code":"/*\r\n    容器组件，它不能我亲自动手写，需要借助react-redux，先下载react-redux库\r\n*/\n// 引入Count的UI组件\nimport CountUI from '../../components/Count';\n\n// 引入connect用于连接UI组件与redux，connect是一个函数；connect函数调用的返回值依然是一个函数\nimport { connect } from 'react-redux';\n\n// a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\n// react-redux帮我调用a函数的时候，已经帮我把状态传过去了，只需要将状态(state)作为参数传进a函数中，并传递给UI组件即可\nfunction a(state) {\n  return {\n    count: state\n  };\n}\n// b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\nfunction b(dispatch) {\n  // UI组件只要调用jia函数，就会接收到number(它是要加的那个数字)，然后就会通知redux传递action对象(也就是type和data的值)\n  return {\n    jia: number => {\n      // 通知redux执行加法\n      dispatch({\n        type: 'increment',\n        data: number\n      });\n    }\n  };\n}\n\n// 使用connect()()，创建并暴露一个Count容器组件，connect函数再一次调用时，就可以接到容器组件(CountContainer)，传入Count的UI组件作为参数，就会把UI组件和容器组件联系起来(这是固定写法)\n// connect在第一次调用时需要传入两个参数，且这两个参数必须都是函数，作用就是传递状态\nexport default connect(a, b)(CountUI);","map":{"version":3,"names":["CountUI","connect","a","state","count","b","dispatch","jia","number","type","data"],"sources":["C:/Users/田园/Desktop/redux_test/src/containers/Count/index.jsx"],"sourcesContent":["/*\r\n    容器组件，它不能我亲自动手写，需要借助react-redux，先下载react-redux库\r\n*/\r\n// 引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n\r\n// 引入connect用于连接UI组件与redux，connect是一个函数；connect函数调用的返回值依然是一个函数\r\nimport {connect} from 'react-redux'\r\n\r\n// a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\r\n    // react-redux帮我调用a函数的时候，已经帮我把状态传过去了，只需要将状态(state)作为参数传进a函数中，并传递给UI组件即可\r\nfunction a(state) {\r\n    return {count:state}\r\n}\r\n// b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\r\nfunction b(dispatch) {\r\n    // UI组件只要调用jia函数，就会接收到number(它是要加的那个数字)，然后就会通知redux传递action对象(也就是type和data的值)\r\n    return {jia:(number)=>{\r\n        // 通知redux执行加法\r\n        dispatch({type:'increment',data:number})\r\n    }}\r\n}\r\n\r\n\r\n// 使用connect()()，创建并暴露一个Count容器组件，connect函数再一次调用时，就可以接到容器组件(CountContainer)，传入Count的UI组件作为参数，就会把UI组件和容器组件联系起来(这是固定写法)\r\n// connect在第一次调用时需要传入两个参数，且这两个参数必须都是函数，作用就是传递状态\r\nexport default connect(a,b)(CountUI)\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,wBAAwB;;AAE5C;AACA,SAAQC,OAAO,QAAO,aAAa;;AAEnC;AACI;AACJ,SAASC,CAACA,CAACC,KAAK,EAAE;EACd,OAAO;IAACC,KAAK,EAACD;EAAK,CAAC;AACxB;AACA;AACA,SAASE,CAACA,CAACC,QAAQ,EAAE;EACjB;EACA,OAAO;IAACC,GAAG,EAAEC,MAAM,IAAG;MAClB;MACAF,QAAQ,CAAC;QAACG,IAAI,EAAC,WAAW;QAACC,IAAI,EAACF;MAAM,CAAC,CAAC;IAC5C;EAAC,CAAC;AACN;;AAGA;AACA;AACA,eAAeP,OAAO,CAACC,CAAC,EAACG,CAAC,CAAC,CAACL,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}