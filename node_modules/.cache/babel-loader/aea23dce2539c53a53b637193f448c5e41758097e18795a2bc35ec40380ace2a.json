{"ast":null,"code":"/*\r\n    容器组件，它不能我亲自动手写，需要借助react-redux，先下载react-redux库\r\n*/\n// 引入Count的UI组件\nimport CountUI from '../../components/Count';\n// 引入action\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action';\n\n// 引入connect用于连接UI组件与redux，connect是一个函数；connect函数调用的返回值依然是一个函数\nimport { connect } from 'react-redux';\n\n// 使用connect()()，创建并暴露一个Count容器组件，connect函数再一次调用时，就可以接到容器组件(CountContainer)，传入Count的UI组件作为参数，就会把UI组件和容器组件联系起来(这是固定写法)\n// connect在第一次调用时需要传入两个参数，且这两个参数必须都是函数，作用就是传递状态\nexport default connect(state => ({\n  count: state\n}),\n// mapDispatchToProps的一般写法\n/*dispatch=> ({\r\n    // 通知redux执行加法\r\n    jia:number=>dispatch(createIncrementAction(number)),\r\n    // 通知redux执行减法\r\n    jian:number=>dispatch(createDecrementAction(number)),\r\n    // 通知redux执行异步任务\r\n    jiaAsync:(number,time)=>dispatch(createIncrementAsyncAction(number,time))\r\n})*/\n\n// mapDispatchToProps的简写\n{\n  jia: createIncrementAction,\n  jian: createDecrementAction,\n  jiaAsync: createIncrementAsyncAction\n})(CountUI);","map":{"version":3,"names":["CountUI","createIncrementAction","createDecrementAction","createIncrementAsyncAction","connect","state","count","jia","jian","jiaAsync"],"sources":["C:/Users/田园/Desktop/redux_test/src/containers/Count/index.jsx"],"sourcesContent":["/*\r\n    容器组件，它不能我亲自动手写，需要借助react-redux，先下载react-redux库\r\n*/\r\n// 引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n// 引入action\r\nimport {createIncrementAction,createDecrementAction,createIncrementAsyncAction} from '../../redux/count_action'\r\n\r\n// 引入connect用于连接UI组件与redux，connect是一个函数；connect函数调用的返回值依然是一个函数\r\nimport {connect} from 'react-redux'\r\n\r\n// 使用connect()()，创建并暴露一个Count容器组件，connect函数再一次调用时，就可以接到容器组件(CountContainer)，传入Count的UI组件作为参数，就会把UI组件和容器组件联系起来(这是固定写法)\r\n// connect在第一次调用时需要传入两个参数，且这两个参数必须都是函数，作用就是传递状态\r\nexport default connect(\r\n    state=> ({count:state}),\r\n\r\n    // mapDispatchToProps的一般写法\r\n    /*dispatch=> ({\r\n        // 通知redux执行加法\r\n        jia:number=>dispatch(createIncrementAction(number)),\r\n        // 通知redux执行减法\r\n        jian:number=>dispatch(createDecrementAction(number)),\r\n        // 通知redux执行异步任务\r\n        jiaAsync:(number,time)=>dispatch(createIncrementAsyncAction(number,time))\r\n    })*/\r\n\r\n    // mapDispatchToProps的简写\r\n    {\r\n        jia:createIncrementAction,\r\n        jian:createDecrementAction,\r\n        jiaAsync:createIncrementAsyncAction\r\n    }\r\n)(CountUI)\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C;AACA,SAAQC,qBAAqB,EAACC,qBAAqB,EAACC,0BAA0B,QAAO,0BAA0B;;AAE/G;AACA,SAAQC,OAAO,QAAO,aAAa;;AAEnC;AACA;AACA,eAAeA,OAAO,CAClBC,KAAK,KAAI;EAACC,KAAK,EAACD;AAAK,CAAC,CAAC;AAEvB;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACA;EACIE,GAAG,EAACN,qBAAqB;EACzBO,IAAI,EAACN,qBAAqB;EAC1BO,QAAQ,EAACN;AACb,CAAC,CACJ,CAACH,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}