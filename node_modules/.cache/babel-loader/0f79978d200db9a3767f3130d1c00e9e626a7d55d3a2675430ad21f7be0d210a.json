{"ast":null,"code":"/* \r\n    该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\n\n// 引入createStore，专门用于创建redux中最为核心的store对象\n// 引入redux-thunk后，引入名为applyMiddleware的中间件，中文叫执行中间件\nimport { createStore, applyMiddleware } from 'redux';\n// 引入为Count组件服务的reducer\nimport countReducer from './count_reducers';\n// 引入redux-thunk，用于store接收函数类型的action，并执行里面的异步任务\nimport thunk from 'redux-thunk';\n// 暴露store，applyMiddleware必须作为createStore的第二个参数传递进去，且applyMiddleWare也是函数，调用时需要把thunk作为参数传递进去\nexport default createStore(countReducer, applyMiddleware(thunk));\n\n// 若给store传递的action是一般类型的对象，那store就把action交给reducers来处理；若给store传递的是函数，那store就会调用，再把里面的异步任务交给reducers","map":{"version":3,"names":["createStore","applyMiddleware","countReducer","thunk"],"sources":["C:/Users/田园/Desktop/redux_test/src/redux/store.js"],"sourcesContent":["/* \r\n    该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\r\n\r\n// 引入createStore，专门用于创建redux中最为核心的store对象\r\n    // 引入redux-thunk后，引入名为applyMiddleware的中间件，中文叫执行中间件\r\nimport {createStore,applyMiddleware} from 'redux'\r\n// 引入为Count组件服务的reducer\r\nimport countReducer from './count_reducers'\r\n// 引入redux-thunk，用于store接收函数类型的action，并执行里面的异步任务\r\nimport thunk from 'redux-thunk'\r\n// 暴露store，applyMiddleware必须作为createStore的第二个参数传递进去，且applyMiddleWare也是函数，调用时需要把thunk作为参数传递进去\r\nexport default createStore(countReducer,applyMiddleware(thunk))\r\n\r\n\r\n// 若给store传递的action是一般类型的对象，那store就把action交给reducers来处理；若给store传递的是函数，那store就会调用，再把里面的异步任务交给reducers\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACI;AACJ,SAAQA,WAAW,EAACC,eAAe,QAAO,OAAO;AACjD;AACA,OAAOC,YAAY,MAAM,kBAAkB;AAC3C;AACA,OAAOC,KAAK,MAAM,aAAa;AAC/B;AACA,eAAeH,WAAW,CAACE,YAAY,EAACD,eAAe,CAACE,KAAK,CAAC,CAAC;;AAG/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}