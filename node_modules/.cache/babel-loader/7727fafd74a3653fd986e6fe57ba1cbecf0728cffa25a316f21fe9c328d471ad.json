{"ast":null,"code":"/*\r\n    容器组件，它不能我亲自动手写，需要借助react-redux，先下载react-redux库\r\n*/\n// 引入Count的UI组件\nimport CountUI from '../../components/Count';\n\n// 引入store\nimport store from '../../redux/store';\n\n// 引入connect用于连接UI组件与redux，connect是一个函数；connect函数调用的返回值依然是一个函数\nimport { connect } from 'react-redux';\n\n// a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\nfunction a() {\n  return {\n    count: store.getState()\n  };\n}\n// b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\nfunction b() {\n  return {\n    jia: () => {\n      console.log(1);\n    }\n  };\n}\n\n// 使用connect()()，创建并暴露一个Count容器组件，connect函数再一次调用时，就可以接到容器组件(CountContainer)，传入Count的UI组件作为参数，就会把UI组件和容器组件联系起来(这是固定写法)\n// connect在第一次调用时需要传入两个参数，且这两个参数必须都是函数\nexport default connect(a, b)(CountUI);","map":{"version":3,"names":["CountUI","store","connect","a","count","getState","b","jia","console","log"],"sources":["C:/Users/田园/Desktop/redux_test/src/containers/Count/index.jsx"],"sourcesContent":["/*\r\n    容器组件，它不能我亲自动手写，需要借助react-redux，先下载react-redux库\r\n*/\r\n// 引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n\r\n// 引入store\r\nimport store from '../../redux/store'\r\n\r\n// 引入connect用于连接UI组件与redux，connect是一个函数；connect函数调用的返回值依然是一个函数\r\nimport {connect} from 'react-redux'\r\n\r\n// a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\r\nfunction a() {\r\n    return {count:store.getState()}\r\n}\r\n// b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\r\nfunction b() {\r\n    return {jia:()=>{console.log(1);}}\r\n}\r\n\r\n\r\n// 使用connect()()，创建并暴露一个Count容器组件，connect函数再一次调用时，就可以接到容器组件(CountContainer)，传入Count的UI组件作为参数，就会把UI组件和容器组件联系起来(这是固定写法)\r\n// connect在第一次调用时需要传入两个参数，且这两个参数必须都是函数\r\nexport default connect(a,b)(CountUI)\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,wBAAwB;;AAE5C;AACA,OAAOC,KAAK,MAAM,mBAAmB;;AAErC;AACA,SAAQC,OAAO,QAAO,aAAa;;AAEnC;AACA,SAASC,CAACA,CAAA,EAAG;EACT,OAAO;IAACC,KAAK,EAACH,KAAK,CAACI,QAAQ;EAAE,CAAC;AACnC;AACA;AACA,SAASC,CAACA,CAAA,EAAG;EACT,OAAO;IAACC,GAAG,EAACA,CAAA,KAAI;MAACC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAAC;EAAC,CAAC;AACtC;;AAGA;AACA;AACA,eAAeP,OAAO,CAACC,CAAC,EAACG,CAAC,CAAC,CAACN,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}